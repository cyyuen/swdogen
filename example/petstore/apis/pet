{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.2",
  "resourcePath": "/pet",
  "basePath": "http://petstore.swagger.wordnik.com/api",
  "produces": [ "application/xml", "text/html", "text/plain" ],
  "consumes": [ "application/xml" ],
  "apis": [
    {
      "path": "/pet/findByStatus",
      "operations": [
        {
          "nickname": "findPetsByStatus",
          "notes":
            "Multiple status values can be provided with comma seperated strings",
          "summary": "Finds Pets by status",
          "method": "GET",
          "type": "array",
          "uniqueItems": false,
          "items": { "$ref": "Pet" },
          "parameters": [
            {
              "name": "status",
              "paramType": "query",
              "description":
                "Status values that need to be considered for filter",
              "required": true,
              "type": "string",
              "defaultValue": "available",
              "enum": [ "available", "pending", "sold" ]
            }
          ],
          "responseMessages": [
            { "code": 400, "message": "Invalid status value" }
          ]
        }
      ]
    },
    {
      "path": "/pet/{petId}",
      "operations": [
        {
          "nickname": "getPetById",
          "notes": "Returns a pet based on ID",
          "summary": "Find pet by ID",
          "method": "GET",
          "type": "Pet",
          "produces": [ "application/json" ],
          "consumes": [ "application/json" ],
          "parameters": [
            {
              "name": "petId",
              "paramType": "path",
              "description": "ID of pet that needs to be fetched",
              "required": true,
              "type": "number",
              "format": "double",
              "mininum": 1.0,
              "maxinum": 100000.0
            },
            {
              "name": "auth",
              "paramType": "header",
              "description": "token used to authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responseMessages": [
            {
              "responseModel": "Tag",
              "code": 404,
              "message": "Pet not found"
            },
            { "code": 400, "message": "Invalid ID supplied" }
          ]
        }
      ]
    },
    {
      "path": "/pet/findByTags",
      "operations": [
        {
          "nickname": "findPetsByTags",
          "notes":
            "Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.",
          "summary": "Finds Pets by tags",
          "method": "GET",
          "type": "array",
          "uniqueItems": false,
          "items": { "$ref": "Pet" },
          "parameters": [
            {
              "name": "tags",
              "paramType": "query",
              "description": "Tags to filter by",
              "required": true,
              "type": "string"
            }
          ],
          "responseMessages": [
            { "code": 400, "message": "Invalid tag value" }
          ]
        }
      ]
    }
  ],
  "models": {
    "Tag": {
      "id": "Tag",
      "required": [ "id", "name" ],
      "properties": {
        "id": {
          "description": "Unique identifier for the tag",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "Friendly name for the tag",
          "type": "string"
        }
      }
    },
    "Pet": {
      "id": "Pet",
      "required": [ "id", "name" ],
      "properties": {
        "id": {
          "description": "Unique identifier for the Pet",
          "type": "number",
          "format": "double",
          "mininum": 0.0,
          "maxinum": 100.0
        },
        "name": {
          "description": "Friendly name of the pet",
          "type": "string"
        },
        "category": {
          "description": "Category the pet is in",
          "$ref": "Category"
        },
        "photoUrls": {
          "description": "Image URLs",
          "type": "array",
          "uniqueItems": false,
          "items": { "type": "string" }
        },
        "tags": {
          "description": "Tags assigned to this pet",
          "type": "array",
          "uniqueItems": false,
          "items": { "$ref": "Tag" }
        },
        "status": {
          "description": "pet status in the store",
          "type": "string",
          "defaultValue": "available",
          "enum": [ "available", "pending", "sold" ]
        }
      }
    },
    "Category": {
      "id": "Category",
      "required": [ "id", "name" ],
      "properties": {
        "id": {
          "description": "Category unique identifier",
          "type": "integer",
          "format": "int64",
          "mininum": 0,
          "maxinum": 100
        },
        "name": { "description": "Name of the category", "type": "string" }
      }
    }
  }
}